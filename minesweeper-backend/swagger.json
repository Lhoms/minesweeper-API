{
  "swagger": "2.0",
  "info": {
    "description": "Minesweeper API Documentation",
    "version": "1.0.0",
    "title": "Minesweeper API",
    "contact": {
      "email": "lucashoms@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "schemes": [
    "http"
  ],
  "host": "https://lhoms-minesweeper-back.herokuapp.com/",
  "basePath": "/",
  "paths": {
    "game/{user}/board/{id}": {
      "get": {
        "summary": "Get board",
        "description": "Gets minesweeper user board by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "description": "Username owner of the board.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Minesweeper board id that you want to retrieve (id must be in uuid format).",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successfully retrieved",
            "schema": {
              "$ref": "#/definitions/boardResponse"
            }
          },
          "404": {
            "description": "Board not found.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Server error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "game/{user}/board": {
      "post": {
        "summary": "Create board",
        "description": "Creates new minesweeper board for this user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "description": "Username owner of the board.",
            "required": true,
            "type": "string"
          },
          {
            "name": "difficulty",
            "in": "query",
            "description": "Selects difficulty of the board (8x8) (16x16) (16x25), if none is chosen the default is 'easy'.",
            "required": false,
            "type": "string",
            "enum": [
              "easy",
              "medium",
              "hard",
              "custom"
            ]
          },
          {
            "name": "height",
            "in": "query",
            "description": "Height of the new custom board. Mandatory if difficulty is 'custom'.",
            "required": false,
            "type": "string"
          },
          {
            "name": "width",
            "in": "query",
            "description": "Width of the new custom board. Mandatory if difficulty is 'custom'.",
            "required": false,
            "type": "string"
          },
          {
            "name": "mines",
            "in": "query",
            "description": "Quantity of mines in the new custom board. Mandatory if difficulty is 'custom'.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successfully created.",
            "schema": {
              "$ref": "#/definitions/boardResponse"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Server error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "get": {
        "summary": "Get all user boards",
        "description": "Gets all minesweeper user boards",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "description": "Username owner of the boards.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successfully retrieved",
            "schema": {
              "items": {
                "$ref": "#/definitions/boardResponse"
              }
            }
          },
          "404": {
            "description": "User not found.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Server error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "game/{user}/board/{id}/reveal/{x}/{y}": {
      "post": {
        "summary": "Reveal cell",
        "description": "Reveals cell in the selected (x, y) coords position.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "description": "Username owner of the board.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Minesweeper board id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x",
            "in": "path",
            "description": "Cell x position in bard.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "y",
            "in": "path",
            "description": "Cell y position in board.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successfully revealed.",
            "schema": {
              "$ref": "#/definitions/boardResponse"
            }
          },
          "404": {
            "description": "Board not found.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Server error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "game/{user}/board/{id}/flag/{x}/{y}": {
      "post": {
        "summary": "Flag cell",
        "description": "Flags or un-flag cell in the selected (x, y) coords position.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "description": "Username owner of the board.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Minesweeper board id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x",
            "in": "path",
            "description": "Cell x position in bard.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "y",
            "in": "path",
            "description": "Cell y position in board.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successfully flagged/un-flagged.",
            "schema": {
              "$ref": "#/definitions/boardResponse"
            }
          },
          "404": {
            "description": "Board not found.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Server error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/user": {
      "get": {
        "summary": "Get all users",
        "description": "Gets all application users",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successfully retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/user"
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Server error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "summary": "Get user",
        "description": "Gets username by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Username id.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successfully retrieved",
            "schema": {
              "$ref": "#/definitions/user"
            }
          },
          "404": {
            "description": "User not found.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Server error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "summary": "Create user",
        "description": "Creates username in the application.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Username id.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successfully retrieved",
            "schema": {
              "$ref": "#/definitions/user"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Server error.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "boardResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "height": {
          "type": "integer"
        },
        "width": {
          "type": "integer"
        },
        "mines": {
          "type": "integer"
        },
        "finished": {
          "type": "boolean"
        },
        "win": {
          "type": "boolean"
        },
        "creationDate": {
          "type": "string"
        },
        "endDate": {
          "type": "string"
        },
        "rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/boardRow"
          }
        }
      }
    },
    "boardRow": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/boardCell"
      }
    },
    "boardCell": {
      "type": "object",
      "properties": {
        "x": {
          "type": "integer"
        },
        "y": {
          "type": "integer"
        },
        "nearMines": {
          "type": "integer"
        },
        "hasMine": {
          "type": "boolean"
        },
        "flagged": {
          "type": "boolean"
        },
        "revealed": {
          "type": "boolean"
        },
        "exploded": {
          "type": "boolean"
        }
      }
    },
    "user": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "error": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        }
      }
    }
  }
}
